commands:
  initialize:
    description: Initilize the gcloud CLI
    parameters:
      gcloud_service_key:
        default: GCLOUD_SERVICE_KEY
        description: |
          Name of environment variable storing the full service key JSON file for the Google project
        type: env_var_name
      google_project_id:
        default: GOOGLE_PROJECT_ID
        description: The Google project ID to connect with via the gcloud CLI
        type: env_var_name
    steps:
    - orb-tools/check-env-var-param:
        command-name: Checking whether required env vars are set to initialize gcloud
          CLI...
        param: <<parameters.gcloud_service_key>>,<<parameters.google_project_id>>
    - run:
        command: |
          # Store service account
          echo $gcloud_service_key > gcloud_service_key.json

          # Initialize gcloud CLI
          gcloud auth activate-service-account --key-file=gcloud_service_key.json
          gcloud --quiet config set project $google_project_id
        name: Initialize gcloud CLI to connect to Google Cloud

  install:
    description: Install the gcloud CLI, if not available
    parameters:
      version:
        default: 283.0.0
        description: 'Version of the CLI to install. Must contain the full version
          number as it appears in the URL on this page: https://cloud.google.com/sdk/docs/downloads-versioned-archives'
        type: string
    steps:
    - run:
        command: |
          install () {
            # Set sudo to work whether logged in as root user or non-root user
            if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
            cd ~/
            curl -s https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-<<parameters.version>>-linux-x86_64.tar.gz | tar xz
            echo 'source ~/google-cloud-sdk/path.bash.inc' >> $BASH_ENV
          }

          if grep 'docker\|lxc' /proc/1/cgroup > /dev/null 2>&1; then
            if [[ $(command -v gcloud) == "" ]]; then
              install
            else
              echo "gcloud CLI is already installed."
            fi
          else
            echo "----------------------------------------------------------------------------------------------------"
            echo "this is a machine executor job, replacing default installation of gcloud CLI"
            echo "----------------------------------------------------------------------------------------------------"
            sudo rm -rf /opt/google-cloud-sdk
            install
          fi
        name: Install latest gcloud CLI version, if not available
    - run:
        command: gcloud version
        name: GCloud version

version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@1.8.4
  orb-tools: circleci/orb-tools@8.26.0
jobs:
    build:
      docker:
          - image: circleci/node:10.16.3-browsers
      description: |
        Install gcloud CLI and initialize to connect to Google Cloud
      parameters:
        gcloud_service_key:
          default: GCLOUD_SERVICE_KEY
          description: The gcloud service key
          type: env_var_name
        google_project_id:
          default: GOOGLE_PROJECT_ID
          description: The Google project ID to connect with via the gcloud CLI
          type: env_var_name
      steps:
      - install
      - initialize:
          gcloud_service_key: <<parameters.gcloud_service_key>>
          google_project_id: <<parameters.google_project_id>>
      - run: npm run regression
